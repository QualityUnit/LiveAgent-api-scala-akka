/**
 * LiveAgent API
 * This page contains complete API documentation for LiveAgent software. To display additional info and examples for specific API method, just click on the method name in the list below.<br/><br/>To be able to make API requests you need to generate an API key in your admin panel first. [See this article for detailed info.](https://support.ladesk.com/741982-API-key)<br/><br/>Additional info about more advanced agent, contact or ticket API filters can be found [in this article](https://support.ladesk.com/513528-APIv3-advanced-filter-examples).<br/><br/>If you have any question or doubts regarding this API, please do not hesitate to contact our support team.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@qualityunit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.liveagent.legacy.client.model

import com.liveagent.legacy.client.core.{ApiEnum, ApiModel}

import org.json4s.MappingException

case class Call (
  id: String,
  ticket_id: String,
  /* incoming call ('in' - default), outgoing call ('out'), internal call('int') */
  direction: Option[CallEnums.Direction] = None,
  /* O - online, F - offline, U - unknown */
  callee_status: Option[CallEnums.CalleeStatus] = None,
  ivrs: Option[Seq[Ivr]] = None,
  record_call: Option[Boolean] = None,
  reroute_time: Option[Double] = None,
  max_queue_time: Option[Double] = None,
  max_ring_time: Option[Double] = None,
  /* Name of IVR in case the service is online. If empty, call starts ringing to agents */
  online_ivr: Option[String] = None,
  /* Name of IVR in case the service is offline. If empty, call hangs up with not available tone */
  offline_ivr: Option[String] = None,
  /* Name of IVR while waiting in queue. If empty, default in queue music is played */
  queue_ivr: Option[String] = None,
  /* Caller number */
  from_number: Option[String] = None,
  /* Name of the caller in case it is known */
  caller_name: Option[String] = None,
  /* Callee number */
  to_number: Option[String] = None,
  /* trunk number via which call was made / received (if applicable) */
  via_number: Option[String] = None
) extends ApiModel

object CallEnums {
    sealed trait Direction extends ApiEnum

    object Direction {
        case object In extends Direction { val value = "in" }
        case object Out extends Direction { val value = "out" }
        case object Int extends Direction { val value = "int" }

        def fromString(value: String): Direction = value match {
          case "in" =>
            Direction.In
          case "out" =>
            Direction.Out
          case "int" =>
            Direction.Int
          case unknown =>
            throw new MappingException(s"Can't convert $unknown to Direction")
        }
    }

    sealed trait CalleeStatus extends ApiEnum

    object CalleeStatus {
        case object `O` extends CalleeStatus { val value = "O" }
        case object `F` extends CalleeStatus { val value = "F" }
        case object `U` extends CalleeStatus { val value = "U" }

        def fromString(value: String): CalleeStatus = value match {
          case "O" =>
            CalleeStatus.`O`
          case "F" =>
            CalleeStatus.`F`
          case "U" =>
            CalleeStatus.`U`
          case unknown =>
            throw new MappingException(s"Can't convert $unknown to CalleeStatus")
        }
    }

}

