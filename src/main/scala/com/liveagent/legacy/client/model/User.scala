/**
 * LiveAgent API
 * This page contains complete API documentation for LiveAgent software. To display additional info and examples for specific API method, just click on the method name in the list below.<br/><br/>To be able to make API requests you need to generate an API key in your admin panel first. [See this article for detailed info.](https://support.ladesk.com/741982-API-key)<br/><br/>Additional info about more advanced agent, contact or ticket API filters can be found [in this article](https://support.ladesk.com/513528-APIv3-advanced-filter-examples).<br/><br/>If you have any question or doubts regarding this API, please do not hesitate to contact our support team.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@qualityunit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.liveagent.legacy.client.model

import com.liveagent.legacy.client.core.{ApiEnum, ApiModel}

import org.json4s.MappingException

case class User (
  id: Option[String] = None,
  name: Option[String] = None,
  email: Option[String] = None,
  role: Option[UserEnums.Role] = None,
  avatar_url: Option[String] = None
) extends ApiModel

object UserEnums {
    sealed trait Role extends ApiEnum

    object Role {
        case object Owner extends Role { val value = "owner" }
        case object Admin extends Role { val value = "admin" }
        case object Agent extends Role { val value = "agent" }
        case object Visitor extends Role { val value = "visitor" }
        case object ExtAdmin extends Role { val value = "ext_admin" }
        case object RegVisitor extends Role { val value = "reg_visitor" }

        def fromString(value: String): Role = value match {
          case "owner" =>
            Role.Owner
          case "admin" =>
            Role.Admin
          case "agent" =>
            Role.Agent
          case "visitor" =>
            Role.Visitor
          case "ext_admin" =>
            Role.ExtAdmin
          case "reg_visitor" =>
            Role.RegVisitor
          case unknown =>
            throw new MappingException(s"Can't convert $unknown to Role")
        }
    }

}

