/**
 * LiveAgent API
 * This page contains complete API documentation for LiveAgent software. To display additional info and examples for specific API method, just click on the method name in the list below.<br/><br/>To be able to make API requests you need to generate an API key in your admin panel first. [See this article for detailed info.](https://support.ladesk.com/741982-API-key)<br/><br/>Additional info about more advanced agent, contact or ticket API filters can be found [in this article](https://support.ladesk.com/513528-APIv3-advanced-filter-examples).<br/><br/>If you have any question or doubts regarding this API, please do not hesitate to contact our support team.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@qualityunit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.liveagent.legacy.client.model

import com.liveagent.legacy.client.core.ApiModel
import org.joda.time.DateTime
import java.util.UUID

case class Subscription (
  id: String,
  /* Default domain assigned to subscription when created (e.g. example.ladesk.com) */
  domain: Option[String] = None,
  /* Additional domain parked to this subscription (e.g. support.example.com) */
  customDomain: Option[String] = None,
  customerEmail: Option[String] = None,
  customerName: Option[String] = None,
  company: Option[String] = None,
  dateCreated: Option[DateTime] = None,
  dateValidity: Option[DateTime] = None,
  /* I - installing A - active S - suspended T - terminated D - deleted  */
  status: Option[SubscriptionEnums.Status] = None,
  accountId: Option[String] = None,
  clusterId: Option[String] = None,
  taskId: Option[String] = None,
  version: Option[String] = None,
  isLatest: Option[Boolean] = None,
  productId: Option[String] = None,
  variationId: Option[String] = None
) extends ApiModel

object SubscriptionEnums {

  type Status = Status.Value
  object Status extends Enumeration {
    val `I` = Value("I")
    val `A` = Value("A")
    val `S` = Value("S")
    val `T` = Value("T")
    val `D` = Value("D")
  }

}

