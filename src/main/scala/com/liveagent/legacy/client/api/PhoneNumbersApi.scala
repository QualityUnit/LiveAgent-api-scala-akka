/**
 * LiveAgent API
 * This page contains complete API documentation for LiveAgent software. To display additional info and examples for specific API method, just click on the method name in the list below.<br/><br/>To be able to make API requests you need to generate an API key in your admin panel first. [See this article for detailed info.](https://support.ladesk.com/741982-API-key)<br/><br/>Additional info about more advanced agent, contact or ticket API filters can be found [in this article](https://support.ladesk.com/513528-APIv3-advanced-filter-examples).<br/><br/>If you have any question or doubts regarding this API, please do not hesitate to contact our support team.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: support@qualityunit.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.liveagent.legacy.client.api

import com.liveagent.legacy.client.model.ErrorResponse
import com.liveagent.legacy.client.model.PhoneNumber
import com.liveagent.legacy.client.core._
import com.liveagent.legacy.client.core.CollectionFormats._
import com.liveagent.legacy.client.core.ApiKeyLocations._

object PhoneNumbersApi {

  def apply(baseUrl: String = "https://localhost/api/v3") = new PhoneNumbersApi(baseUrl)
}

class PhoneNumbersApi(baseUrl: String) {
  
  /**
   * Expected answers:
   *   code 200 : PhoneNumber (Number response)
   *   code 0 : ErrorResponse (Error response)
   * 
   * Available security schemes:
   *   apikey (apiKey)
   * 
   * @param `type` A - API controlled number, T - Twilio number, T-O - Twilio outgoing number, D - Digitale, S - Asterisk
   * @param number 
   * @param status A - Active, I - Inactive
   * @param dialOutPrefix Prefix needed to originate call using this number
   * @param recordCall 
   * @param name 
   * @param departmentid 
   * @param hostSettings json encoded host settings
   * @param host 
   * @param port 
   * @param user 
   * @param password 
   * @param providerid 
   * @param ivr 
   */
  def addNumber(`type`: String, number: String, status: String, dialOutPrefix: Option[Int] = None, recordCall: Option[Boolean] = None, name: Option[String] = None, departmentid: Option[String] = None, hostSettings: Option[String] = None, host: Option[String] = None, port: Option[String] = None, user: Option[String] = None, password: Option[String] = None, providerid: Option[String] = None, ivr: Option[String] = None)(implicit apiKey: ApiKeyValue): ApiRequest[PhoneNumber] =
    ApiRequest[PhoneNumber](ApiMethods.POST, baseUrl, "/phone_numbers", "application/x-www-form-urlencoded")
      .withApiKey(apiKey, "apikey", HEADER)
      .withFormParam("type", `type`)
      .withFormParam("dial_out_prefix", dialOutPrefix)
      .withFormParam("record_call", recordCall)
      .withFormParam("number", number)
      .withFormParam("status", status)
      .withFormParam("name", name)
      .withFormParam("departmentid", departmentid)
      .withFormParam("host_settings", hostSettings)
      .withFormParam("host", host)
      .withFormParam("port", port)
      .withFormParam("user", user)
      .withFormParam("password", password)
      .withFormParam("providerid", providerid)
      .withFormParam("ivr", ivr)
      .withSuccessResponse[PhoneNumber](200)
      .withDefaultErrorResponse[ErrorResponse]
      

  /**
   * Expected answers:
   *   code 200 : PhoneNumber (PhoneNumber response)
   *   code 404 : ErrorResponse (Error response)
   *   code 0 : ErrorResponse (Error response)
   * 
   * Available security schemes:
   *   apikey (apiKey)
   * 
   * @param phoneNumberId 
   */
  def getPhoneNumber(phoneNumberId: String)(implicit apiKey: ApiKeyValue): ApiRequest[PhoneNumber] =
    ApiRequest[PhoneNumber](ApiMethods.GET, baseUrl, "/phone_numbers/{phoneNumberId}", "application/json")
      .withApiKey(apiKey, "apikey", HEADER)
      .withPathParam("phoneNumberId", phoneNumberId)
      .withSuccessResponse[PhoneNumber](200)
      .withErrorResponse[ErrorResponse](404)
      .withDefaultErrorResponse[ErrorResponse]
      

  /**
   * Expected answers:
   *   code 200 : Seq[PhoneNumber] (PhoneNumber response)
   *   code 0 : ErrorResponse (Error response)
   * 
   * Available security schemes:
   *   apikey (apiKey)
   * 
   * @param perPage Results per page. Used only if _page is used.
   * @param sortDir Sorting direction ASC or DESC
   * @param sortField 
   * @param filters Filters (json object {column:value, ...} or json array [[column,operator,value], ...])
   * @param cursor used for iteration throght resultset. Cursor identifies specific page in resultset.
   * @param additionalObjects Additional objects
   */
  def getPhoneNumbersList(perPage: Option[Int] = None, sortDir: Option[String] = None, sortField: Option[String] = None, filters: Option[String] = None, cursor: Option[String] = None, additionalObjects: Seq[String])(implicit apiKey: ApiKeyValue): ApiRequest[Seq[PhoneNumber]] =
    ApiRequest[Seq[PhoneNumber]](ApiMethods.GET, baseUrl, "/phone_numbers", "application/json")
      .withApiKey(apiKey, "apikey", HEADER)
      .withQueryParam("_perPage", perPage)
      .withQueryParam("_sortDir", sortDir)
      .withQueryParam("_sortField", sortField)
      .withQueryParam("_filters", filters)
      .withQueryParam("_cursor", cursor)
      .withQueryParam("additionalObjects", ArrayValues(additionalObjects, CSV))
      .withSuccessResponse[Seq[PhoneNumber]](200)
      .withDefaultErrorResponse[ErrorResponse]
      

  /**
   * Expected answers:
   *   code 200 : Any (OK response)
   *   code 404 : ErrorResponse (Phone number not found)
   *   code 0 : ErrorResponse (Error response)
   * 
   * Available security schemes:
   *   apikey (apiKey)
   * 
   * @param phoneNumberId 
   */
  def removePhoneNumber(phoneNumberId: String)(implicit apiKey: ApiKeyValue): ApiRequest[Any] =
    ApiRequest[Any](ApiMethods.DELETE, baseUrl, "/phone_numbers/{phoneNumberId}", "application/json")
      .withApiKey(apiKey, "apikey", HEADER)
      .withPathParam("phoneNumberId", phoneNumberId)
      .withSuccessResponse[Any](200)
      .withErrorResponse[ErrorResponse](404)
      .withDefaultErrorResponse[ErrorResponse]
      

  /**
   * Expected answers:
   *   code 200 : PhoneNumber (Number response)
   *   code 404 : ErrorResponse (Phone number not found)
   *   code 0 : ErrorResponse (Error response)
   * 
   * Available security schemes:
   *   apikey (apiKey)
   * 
   * @param phoneNumberId 
   * @param phoneNumber 
   */
  def updatePhoneNumber(phoneNumberId: String, phoneNumber: PhoneNumber)(implicit apiKey: ApiKeyValue): ApiRequest[PhoneNumber] =
    ApiRequest[PhoneNumber](ApiMethods.PUT, baseUrl, "/phone_numbers/{phoneNumberId}", "application/json")
      .withApiKey(apiKey, "apikey", HEADER)
      .withBody(phoneNumber)
      .withPathParam("phoneNumberId", phoneNumberId)
      .withSuccessResponse[PhoneNumber](200)
      .withErrorResponse[ErrorResponse](404)
      .withDefaultErrorResponse[ErrorResponse]
      

  /**
   * Expected answers:
   *   code 200 : PhoneNumber (Number response)
   *   code 404 : ErrorResponse (Phone number not found)
   *   code 0 : ErrorResponse (Error response)
   * 
   * Available security schemes:
   *   apikey (apiKey)
   * 
   * @param phoneNumberId 
   * @param status A - Active, I - Inactive
   */
  def updatePhoneNumberStatus(phoneNumberId: String, status: String)(implicit apiKey: ApiKeyValue): ApiRequest[PhoneNumber] =
    ApiRequest[PhoneNumber](ApiMethods.PUT, baseUrl, "/phone_numbers/{phoneNumberId}/status", "application/x-www-form-urlencoded")
      .withApiKey(apiKey, "apikey", HEADER)
      .withFormParam("status", status)
      .withPathParam("phoneNumberId", phoneNumberId)
      .withSuccessResponse[PhoneNumber](200)
      .withErrorResponse[ErrorResponse](404)
      .withDefaultErrorResponse[ErrorResponse]
      



}

